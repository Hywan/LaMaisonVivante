:root {
    --color-light-000-transparent: hsla(0, 0%, 100%, 0.96);
    --color-light-000: hsl(0, 0%, 100%);
    --color-light-005: hsl(0, 0%, 99.5%);
    --color-light-010: hsla(0, 0%, 99%, 0.85);
    --color-light-100: hsl(214, 41%, 97%);
    --color-light-200: hsl(222, 25%, 92%);
    --color-light-300: hsl(217, 48%, 83%);
    --color-blue-300: hsl(213, 100%, 88%);
    --color-blue-500: hsl(213, 100%, 74%);
    --color-blue-600: hsl(213, 100%, 60%);
    --color-blue-800: hsl(213, 100%, 25%);
    --color-yellow-000: hsl(47, 100%, 92%);
    --color-yellow-100: hsl(47, 81%, 75%);
    --color-yellow-500: hsl(47, 100%, 58%);
    --color-yellow-600: hsl(41, 100%, 62%);
    --color-pink-300: hsl(324, 77%, 88%);
    --color-pink-500: hsl(324, 77%, 75%);
    --color-pink-600: hsl(331, 64%, 64%);
    --color-green-300: hsl(114, 57%, 70%);
    --color-green-600: hsl(114, 57%, 48%);
    --color-red-300: hsl(11, 100%, 62%);
    --color-red-600: hsl(11, 100%, 55%);
    --color-dark-100: hsl(0, 0%, 78%);
    --color-dark-300: hsl(0, 0%, 70%);
    --color-dark-500: hsl(0, 0%, 26%);
    --color-dark: hsl(0, 100%, 0%);

    --space-very-small: .25rem;
    --space-small: .5rem;
    --space: 1rem;
    --space-large: 1.5rem;
    --space-very-large: 3rem;
    --space-very-very-large: 4rem;

    --light-direction: 170deg;
    --shadow-distance: 14px;
    --shadow-blur: 28px;

    --inset-shadow-distance: 3px;
    --inset-shadow-blur: 10px;

    --backdrop-blur: 40px;

    --icon-small: 1rem;

    --transition-duration: 300ms;
    --transition-bezier: cubic-bezier(.45,.18,.22,.94);

    --font-size-primary: 100%;
    --font-size-secondary: .9rem;
    --font-size-tertiary: .7rem;
    --font-size-tiny: .5rem;
}

@font-face {
    font-family: text;
    src: url('../fonts/inter-regular.woff2') format('woff2');
    font-weight: normal;
    font-style: normal;
    font-weight: 400;
    font-display: swap;
}

@font-face {
    font-family: text;
    src: url('../fonts/inter-semi-bold.woff2') format('woff2');
    font-weight: normal;
    font-style: normal;
    font-weight: 600;
    font-display: swap;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

*:focus {
    /* I know, it's super super bad for accessibility, but it fixes a
       quick bug on iOS, and nobody needs it at my house, which is the
       only place where this app runs. Please don't do that. */
    outline: none;
}

html {
    color: var(--color-dark);
    font-size: 100%;
    min-height: 100%;
    background:
        linear-gradient(var(--light-direction), var(--color-light-000), var(--color-light-200)) no-repeat;
}

body {
    font: 1.1em/1.4em text;
    font-weight: 400;
}

.content-grid {
    --padding-inline: var(--space);
    --content-max-width: 45rem;
    --breakout-max-width: 50rem;

    --breakout-size: calc((var(--breakout-max-width) - var(--content-max-width)) / 2);

    display: grid;
    grid-template-columns:
        [full-width-start]
            minmax(var(--padding-inline), 1fr)
            [breakout-start]
                minmax(0, var(--breakout-size))
                [content-start]
                    min(
                        100% - (var(--padding-inline) * 2),
                        var(--content-max-width)
                    )
                [content-end]
                minmax(0, var(--breakout-size))
            [breakout-end]
            minmax(var(--padding-inline), 1fr)
        [full-width-end];
}

.content-grid > * {
    grid-column: content;
}

.content-grid > .breakout {
    grid-column: breakout;
}

.content-grid > .full-width {
    grid-column: full-width;
}

.header--container {
    position: sticky;
    z-index: calc(infinity);
    top: 0;
    margin-bottom: var(--space-large);
}

.header--container::before {
    content: '';
    position: absolute;
    z-index: -1;
    inset: 0;
    background: var(--color-light-000-transparent);
}

    @supports (backdrop-filter: blur(0)) or (-webkit-backdrop-filter: blur(0)) {
        .header--container::before {
            backdrop-filter: blur(var(--backdrop-blur));
            -webkit-backdrop-filter: blur(var(--backdrop-blur));
            background: transparent;
        }
    }

.header {
    display: grid;
    grid-template: "title details";

    font-weight: 600;
    line-height: var(--space-very-large);
}

    .header--title a {
        text-decoration: none;
    }

    .header--title {
        grid-area: title;
        font-size: 120%;
    }

        .header--title > ol {
            list-style: none;
        }

        .header--title > ol > li:not(:last-child) {
            display: none;
        }

        .header--title > ol > li:not(:first-child) > a::before {
            content: 'Â ';
            display: inline-block;
            width: 1.4rem;
            background: url('../icons/chevron_left.svg') 50% 50% no-repeat;
        }

    .header--details {
        grid-area: details;
        text-align: end;
        list-style: none;
    }

    .header--details > li {
        display: inline-block;
        position: relative;
    }

    .header--details[role="tablist"] > [role="tab"] {
        margin-left: var(--space);
    }

    .header--details[role="tablist"] > [role="tab"][aria-selected="true"]::before {
        content: '';
        position: absolute;
        left: calc(50% - var(--space-small) / 2);
        bottom: var(--space-very-small);
        width: var(--space-small);
        height: var(--space-small);
        border-radius: 50%;
        background: var(--color-yellow-500);
    }

[aria-hidden="true"] {
    display: none;
}

.things--location {
    display: block;
    margin-block-end: var(--space-large);
    padding: var(--space);
    border: 4px solid transparent;
    border-radius: var(--space);
    box-shadow:
        var(--shadow-distance) var(--shadow-distance) var(--shadow-blur) var(--color-light-200),
        calc(-1 * var(--shadow-distance)) calc(-1 * var(--shadow-distance)) var(--shadow-blur) var(--color-light-000);
    background:
        linear-gradient(var(--color-light-000), var(--color-light-000)) padding-box,
        linear-gradient(var(--light-direction), var(--color-yellow-100), var(--color-pink-600)) border-box;
}

.things--list {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(10rem, 1fr));
    gap: var(--space);
    justify-items: center;

    margin-bottom: var(--space-very-very-large);
    padding-top: var(--space-large);
}

.thing--frame {
    --thing--frame--font-size-primary: var(--font-size-secondary);
    --thing--frame--font-size-secondary: var(--font-size-tertiary);
    --thing--frame--padding-block: var(--space);
    --thing--frame--padding-inline: var(--space-large);
    --thing--frame--border-radius: var(--space-very-large);
    --thing--frame--width: 9.5rem;
    --thing--frame--height: var(--thing--frame--width);

    display: flex;
    flex-direction: column-reverse;
    gap: var(--space-very-small);

    width: var(--thing--frame--width);
    height: var(--thing--frame--height);
    padding: var(--thing--frame--padding-block) var(--thing--frame--padding-inline);

    border-radius: var(--thing--frame--border-radius);
    box-shadow: var(--shadow-distance) var(--shadow-distance) var(--shadow-blur) var(--color-light-200),
                calc(-1 * var(--shadow-distance)) calc(-1 * var(--shadow-distance)) var(--shadow-blur) var(--color-light-000);
    background: var(--color-light-000);

    overflow: hidden;

    transition: box-shadow var(--transition-duration) ease;
}

    .thing--frame.thing--frame--fullframe {
        display: block;
        padding: 0;
    }

    .thing--frame.thing--frame--fullframe > .thing--frame-content {
        width: inherit;
        height: inherit;
    }

    .thing--frame.thing--frame--fullframe > .thing--frame-name {
        display: none;
    }

.thing--frame[aria-disabled="true"] {
    box-shadow:
        inset var(--inset-shadow-distance) var(--inset-shadow-distance) var(--inset-shadow-blur) var(--color-light-200),
        inset calc(-1 * var(--inset-shadow-distance)) calc(-1 * var(--inset-shadow-distance)) var(--inset-shadow-blur) var(--color-light-000);
}

    .thing--frame > .thing--frame-name {
        display: flex;
        flex-direction: column-reverse;
        align-self: center;
        text-align: center;

        transition: opacity var(--transition-duration) ease;
    }

    .thing--frame > .thing--frame-name > .thing--frame-subname {
        font-size: 75%;
        font-weight: normal;
        line-height: 80%;
    }

    .thing--frame[aria-disabled="true"] > .thing--frame-name {
        opacity: .6;
    }

    .thing--frame > .thing--frame-content {
        flex: 1;

        transition:
            opacity var(--transition-duration) ease,
            transform var(--transition-duration) ease,
            filter var(--transition-duration) ease;

    }

    .thing--frame[aria-disabled="true"] > .thing--frame-content {
        opacity: .25;
        filter: grayscale(40%);
        transform: scale(.75);
    }

.thing--actionable {}

.thing--actions {
    --thing--action-size: 2rem;

    display: flex;
    flex-flow: row wrap;
    gap: .5rem;
    margin-top: var(--space);
}

    .thing--actions > * {
        flex: 1;
    }

.thing--expandable {}

    .thing--expandable > .thing--expandable-summary {
        cursor: pointer;
    }

    .thing--expandable[aria-expanded = "false"] > .thing--expandable-long {
        visibility: hidden;
        opacity: 0;
        transform: translateY(70vh);
        height: 0;
        width: 0;
        overflow: hidden;
    }

    .thing--expandable[aria-expanded = "true"] > .thing--expandable-long {
        position: fixed;
        z-index: 9;
        inset: var(--space-very-large) 0 0;

        visibility: visible;
        opacity: 1;
        transform: translateY(0);
        overflow: auto;

        transition:
            transform var(--transition-duration) var(--transition-bezier),
            opacity var(--transition-duration) var(--transition-bezier);

        background: var(--color-light-000-transparent);
    }

.thing--meter {}

    .thing--meter > .thing--frame-content {
        position: relative;
    }

    .thing--meter > .thing--frame-content > .thing--meter-meter {
        width: 100%;
        vertical-align: bottom;
    }

    .thing--meter > .thing--frame-content > .thing--meter-primary-value {
        --this-height: 1.5rem;

        position: absolute;
        top: calc(50% - var(--this-height) / 2 - var(--this-height) / 4);
        left: 0;
        right: 0;
        line-height: var(--this-height);
        text-align: center;
        font-size: var(--thing--frame--font-size-primary);
    }

    .thing--meter > .thing--frame-content > .thing--meter-primary-value.thing--meter-primary-value-large {
        top: calc(50% - var(--this-height) / 2);
    }

    .thing--meter > .thing--frame-content > .thing--meter-secondary-value {
        --this-height: 1.5rem;

        position: absolute;
        top: calc(50% - var(--this-height) / 2 + var(--this-height) / 2);
        left: 0;
        right: 0;
        line-height: var(--this-height);
        text-align: center;
        font-size: var(--thing--frame--font-size-secondary);
        color: var(--color-dark-500);
    }

.thing--solar-pv {}

    .thing--solar-pv > .thing--frame-content {
        position: relative;
    }

    .thing--solar-pv > .thing--frame-content > .thing--solar-pv-meter {
        width: 100%;
        vertical-align: bottom;
    }

    .thing--solar-pv > .thing--frame-content > .thing--solar-pv-primary-value {
        --this-height: 1.5rem;

        position: absolute;
        top: calc(50% - var(--this-height) / 2 - var(--this-height) / 4);
        left: 0;
        right: 0;
        line-height: var(--this-height);
        text-align: center;
        font-size: var(--thing--frame--font-size-primary);
    }

    .thing--solar-pv > .thing--frame-content > .thing--solar-pv-sunrise,
    .thing--solar-pv > .thing--frame-content > .thing--solar-pv-sunset {
        --this-height: 1.5rem;
        --solar-pv-sunrise-sunset-width: 2rem;

        position: absolute;
        top: calc(50% - var(--this-height) / 2 + var(--this-height) / 2);
        line-height: var(--this-height);
        text-align: center;
        font-size: var(--thing--frame--font-size-secondary);
        color: var(--color-dark-500);
        width: var(--solar-pv-sunrise-sunset-width);
    }

    .thing--solar-pv > .thing--frame-content > .thing--solar-pv-sunrise {
        left: 0;
        text-align: left;
    }

    .thing--solar-pv > .thing--frame-content > .thing--solar-pv-sunset {
        right: 0;
        text-align: right;
    }

    .thing--solar-pv > .thing--frame-content > .thing--solar-pv-meter .meter {
        transform: rotate(180deg);
        transform-origin: 50% 50%;
        stroke-dasharray: 50 100;
    }

    .thing--solar-pv > .thing--frame-content > .thing--solar-pv-meter .thing--solar-pv-sun {
        transition:
            cx var(--transition-duration) ease-in-out,
            cy var(--transition-duration) ease-in-out;
    }

.thing--dhw {}

    .thing--dhw > .thing--frame-content {
        position: relative;
        text-align: center;
    }

    .thing--dhw > .thing--frame-content > .thing--dhw-boiler {
        height: 5.5rem;
        vertical-align: bottom;
        margin-bottom: var(--space-very-small);
    }

    .thing--dhw > .thing--frame-content > .thing--dhw-top-value,
    .thing--dhw > .thing--frame-content > .thing--dhw-bottom-value {
        --this-height: 1.5rem;

        position: absolute;
        right: -.5rem;
        line-height: var(--this-height);
        text-align: center;
        font-size: var(--thing--frame--font-size-primary);
        padding-left: .4rem;
        border-radius: .5rem;
        background: var(--color-light-000);
    }

    .thing--dhw > .thing--frame-content > .thing--dhw-top-value {
        top: 10%;
    }

    .thing--dhw > .thing--frame-content > .thing--dhw-bottom-value {
        top: 65%;
    }

.thing--ventilation {}

    .thing--ventilation > .thing--frame-content {
        position: relative;
    }

    .thing--ventilation > .thing--frame-content > .thing--ventilation-meters {
        width: 100%;
        vertical-align: bottom;
    }

    .thing--ventilation > .thing--frame-content > .thing--ventilation-after-ground-coupled-heat-exchanger,
    .thing--ventilation > .thing--frame-content > .thing--ventilation-after-heat-recovery-exchanger,
    .thing--ventilation > .thing--frame-content > .thing--ventilation-extracted {
        --this-height: 1.5rem;

        position: absolute;
        line-height: var(--this-height);
        text-align: center;
        font-size: var(--thing--frame--font-size-secondary);
    }

    .thing--ventilation > .thing--frame-content > .thing--ventilation-after-ground-coupled-heat-exchanger {
        top: .5rem;
        right: .5rem;
    }

    .thing--ventilation > .thing--frame-content > .thing--ventilation-after-heat-recovery-exchanger {
        --this-width: 2rem;

        top: calc(50% - var(--thing--frame--font-size-primary) + .1rem /* visual adjustement */);
        left: calc(50% - var(--this-width) / 2);
        width: var(--this-width);
        font-size: var(--thing--frame--font-size-primary);
    }

    .thing--ventilation > .thing--frame-content > .thing--ventilation-extracted {
        top: 1.2rem;
        right: .5rem;
    }

.thing--weather {}

    .thing--weather > .thing--frame-content {
        display: grid;
        grid-template: "condition condition"
                       "icon temperature"
                       "icon apparent-temperature";
    }

    .thing--weather > .thing--frame-content > .thing--weather-temperature {
        grid-area: temperature;
        align-self: center;
        font-size: var(--thing--frame--font-size-primary);
    }

    .thing--weather > .thing--frame-content > .thing--weather-apparent-temperature {
        grid-area: apparent-temperature;
        font-size: var(--thing--frame--font-size-secondary);
        line-height: 1;
    }

    .thing--weather > .thing--frame-content > .thing--weather-condition {
        grid-area: condition;
        justify-self: center;
        font-size: var(--thing--frame--font-size-primary);
        line-height: 1;
    }

    .thing--weather > .thing--frame-content > .thing--weather-condition-icon {
        grid-area: icon;
        align-self: center;
    }

    .thing--weather > .thing--frame-content > .thing--weather-condition-icon > svg {
        display: grid;
        place-self: center;
        width: 2.6rem;
        max-height: calc(var(--thing--frame--height) / 2);
        margin-right: var(--space-small);
        filter: invert(50%) sepia(100%) saturate(200%) hue-rotate(218deg) drop-shadow(0 0 1px var(--color-light-300));
    }

.thing--weather-wind {}

    .thing--weather-wind > .thing--frame-content {
        position: relative;
        display: grid;
        place-items: center;
    }

    .thing--weather-wind > .thing--frame-content > .thing--weather-wind-compass,
    .thing--weather-wind > .thing--frame-content > .thing--weather-wind-text {
        position: absolute;
    }

    .thing--weather-wind > .thing--frame-content > .thing--weather-wind-compass {
        top: -.5rem;
        width: 100%;
        height: 6.4rem;
    }

    .thing--weather-wind > .thing--frame-content > .thing--weather-wind-text {
        top: 50%;
        transform: translateY(-50%);
        font-size: var(--font-size-tertiary);
        line-height: 1;
        text-align: center;
    }


.thing--weather-forecast {
    --thing--weather-forecast--gutter: var(--space-large);
    --thing--weather-forecast--column-width: 6rem;

    position: relative;

    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: var(--thing--weather-forecast--column-width);
    overflow-x: auto;
    overscroll-behavior-inline: contain;
    scroll-snap-type: x mandatory;
    isolation: isolate;

    margin: var(--space-very-large) 0;
    border-radius: var(--space-small);
}

    .thing--weather-forecast > .thing--weather-one-forecast {
        --thing--weather-forecast-one--gutter: var(--space-small);

        display: flex;
        flex-direction: column;
        gap: calc(var(--thing--weather-forecast--gutter) / 5);
        line-height: 1;

        font-size: var(--font-size-secondary);
        padding: calc(2 * var(--thing--weather-forecast-one--gutter)) var(--thing--weather-forecast-one--gutter);

        scroll-snap-align: start;

        --__pastel_tone: var(--color-light-000);
        background: var(--__pastel_tone);
    }

    /**
     * To create this gradient, I've taken 2 colors in the âpastel
     * tonesâ (see https://youtu.be/GyVMoejbGFg?t=1071). Then I've
     * created a gradient in the LAB space with 6 stops (with
     * https://colordesigner.io/gradient-generator).
     */

    .thing--weather-forecast > .thing--weather-one-forecast[data-temperature-category="0"] {
        --__pastel_tone: hsla(180, 71.83%, 86.08%, .3);
    }

    .thing--weather-forecast > .thing--weather-one-forecast[data-temperature-category="1"] {
        --__pastel_tone: hsla(177.14, 29.58%, 86.08%, .3);
    }

    .thing--weather-forecast > .thing--weather-one-forecast[data-temperature-category="2"] {
        --__pastel_tone: hsla(8.57, 9.09%, 84.9%, .3);
    }

    .thing--weather-forecast > .thing--weather-one-forecast[data-temperature-category="3"] {
        --__pastel_tone: hsla(3.64, 39.76%, 83.73%, .3);
    }

    .thing--weather-forecast > .thing--weather-one-forecast[data-temperature-category="4"] {
        --__pastel_tone: hsla(1.05, 62.64%, 82.16%, .3);
    }

    .thing--weather-forecast > .thing--weather-one-forecast[data-temperature-category="5"] {
        --__pastel_tone: hsla(0, 78%, 80.39%, .3);
    }

    .thing--weather-forecast > .thing--weather-one-forecast > * {
        flex: 1;
        height: calc(2 * var(--font-size-secondary));
        text-align: end;
    }

    .thing--weather-forecast > .thing--weather-one-forecast > .thing--weather-one-forecast--title {
        flex: 2;
        font-size: var(--font-size-secondary);
        text-align: start;
        margin: var(--space) 0 var(--space-very-small);
        transform: translateX(-.5rem) translateY(-.5rem);
    }

    .thing--weather-forecast > .thing--weather-one-forecast:not(:first-child) > .thing--weather-one-forecast--title {
        visibility: hidden;
    }

    .thing--weather-forecast > .thing--weather-one-forecast:first-child > .thing--weather-one-forecast--title > span {
        position: absolute;
        left: 0;
        width: calc(48 * var(--thing--weather-forecast--column-width));
        padding: .2rem 0 .2rem .5rem;
        background: var(--color-light-000-transparent);
    }

    .thing--weather-forecast > .thing--weather-one-forecast:first-child > .thing--weather-one-forecast--title > span > span {
        position: sticky;
        left: .5rem;
    }

    .thing--weather-forecast .thing--weather-one-forecast--datetime {
        flex: 2;
        font-size: var(--font-size-primary);
        text-align: center;
    }

    .thing--weather-forecast .thing--weather-one-forecast--condition,
    .thing--weather-forecast .thing--weather-one-forecast--condition-icon {
        flex: 3;
        font-size: var(--font-size-tertiary);
        line-height: 1;
        text-align: center;
        margin-bottom: var(--space-small);
    }

    .thing--weather-forecast .thing--weather-one-forecast--condition-icon {
        display: grid;
        place-items: center;
    }

    .thing--weather-forecast .thing--weather-one-forecast--condition-icon > svg {
        max-height: 2.5rem;
        width: 3rem;
    }

    .thing--weather-forecast .thing--weather-one-forecast--wind-degree > .icon {
        width: 1.2rem;
        height: 1.2rem;
    }

.thing--car {}

    .thing--car--car {
        display: block;
        margin: var(--space-large) auto 0 auto;
        max-width: 450px;
    }

    .thing--car--car [data-opened="false"] {
        fill: none;
    }

.thing--text {}

    .thing--text > .thing--frame-content {
        font-size: var(--font-size-secondary);
        line-height: 1;
        display: grid;
        grid-auto-flow: column;
        place-content: center;
        gap: var(--space-small);
    }

    .thing--text-icon {
        width: 2rem;
    }

    .thing--text-list {
        list-style: none;
        margin: 0;
        padding: 0;
        display: grid;
        grid-auto-flow: row;
        place-content: center;
        height: 100%;
        gap: var(--space-small);
    }

.thing--slider {}

    .thing--slider .thing--slider-content {
        display: grid;
        grid-auto-flow: column;
        grid-auto-columns: 100%;
        overflow: auto hidden;

        width: 100%;
        height: 100%;

        overscroll-behavior-inline: contain;
        scroll-snap-type: x mandatory;
    }

    .thing--slider .thing--slider-content > * {
        scroll-snap-align: start;

        max-height: var(--thing--frame--height);

        background-size: cover;
        background-position: 50% 50%;
    }

    .thing--slider .thing--slider-content > * > figure {
        position: relative;
        max-height: 100%;
    }

    .thing--slider .thing--slider-content > * > figure > figcaption {
        position: absolute;
        bottom: 9%;
        left: 50%;
        transform: translateX(-50%);

        color: var(--color-light-000);
        filter: drop-shadow(0 0 10px var(--color-dark-500));
        font-size: var(--font-size-primary);
        font-weight: bold;
    }

    .thing--slider .thing--slider-content > * > figure > img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

.thing--pulse,
.thing--blind {
    display: flex;
    align-items: center;
    border-radius: calc(var(--thing--action-size) / 2);
    height: var(--thing--action-size);
}

    .thing--pulse .icon {
        height: calc(var(--thing--action-size) - 1rem);
    }

    .thing--blind .icon {
        height: calc(var(--thing--action-size) - 1.4rem);
    }

.label {
    color: var(--color-light-000);
    font-size: .7em;
    padding: .2em .8em;
    vertical-align: bottom;
    border-radius: .3rem;
    background: var(--color-blue-500);
}

iframe {
    width: 100%;
    height: 100%;
    border: 0;
    display: block;
}

#metrics-panel [role="tabpanel"] > iframe {
    height: calc(100vh - var(--space-very-large) * 4);
    border: 4px solid transparent;
    border-radius: var(--space);
    box-shadow:
        var(--shadow-distance) var(--shadow-distance) var(--shadow-blur) var(--color-light-200),
        calc(-1 * var(--shadow-distance)) calc(-1 * var(--shadow-distance)) var(--shadow-blur) var(--color-light-000);
    background:
        linear-gradient(var(--color-light-000), var(--color-light-000)) padding-box,
        linear-gradient(var(--light-direction), var(--color-yellow-100), var(--color-pink-600)) border-box;
}

h2 { font-size: 130% }
h3 { font-size: 110% }

.heading, .heading--subtitle {
    display: block;
    line-height: 100%;
}

    h2 > .heading--subtitle {
        font-size: 60%;
        font-weight: normal;
        padding-block-start: var(--space-small);
    }

a {
    color: inherit;
    text-decoration-thickness: from-font;
}

ul {
    margin-left: var(--space);
}

    ul > li::marker {
        color: var(--color-light-300);
    }

    h4 ~ ul {
        margin-top: var(--space);
    }

strong {
    font-weight: 600;
}

button {
    appeareance: none;
    cursor: pointer;

    color: var(--color-green-600);
    font: inherit;
    font-weight: 600;

    border: none;
    background: var(--color-light-010);
    box-shadow: inset 1px 1px 3px #e9e9e9,
                inset -1px -1px 3px #ffffff;

    transition:
        opacity var(--transition-duration) ease-in-out,
        filter var(--transition-duration) ease-in-out;
}

    button[disabled] {
        opacity: 70%;
        filter: grayscale(80%);
        cursor: not-allowed;
    }

    button:not([disabled]):hover,
    button:not([disabled]):focus {
        background: var(--color-light-000);
    }

.icon {
    max-width: 100%;
    max-height: 100%;
}

    .header .icon {
        padding: 0;
        height: 1.5rem;
        width: 1.5rem;
    }

.tabs {
    text-align: center;
}

    .tabs > [role="tablist"] {
        display: inline-block;
        list-style: none;
        text-align: center;
        margin: 0 auto var(--space-large) auto;
        padding: var(--space-very-small);

        border-radius: 14px;
        background: var(--color-light-000);
        box-shadow:
            inset var(--inset-shadow-distance) var(--inset-shadow-distance) var(--inset-shadow-blur) var(--color-light-200),
            inset calc(-1 * var(--inset-shadow-distance)) calc(-1 * var(--inset-shadow-distance)) var(--inset-shadow-blur) var(--color-light-000);
    }

    .tabs > [role="tab"] {
        display: inline-block;
        padding: var(--space-very-small) var(--space);
        border-radius: 10px;
    }

    .tabs > [role="tab"][aria-selected="true"] {
        background: var(--color-light-000);
        box-shadow:
            var(--inset-shadow-distance) var(--inset-shadow-distance) var(--inset-shadow-blur) var(--color-light-200);
    }

[role="tab"] {
    cursor: pointer;
}

.blender {}

    .blender--subject {
        mix-blend-mode: lighten;
    }

    .stroked {
        fill: none;
        filter: drop-shadow(0 0 2px var(--color-light-200));
        stroke: #000;
        stroke-width: 2;
        stroke-linecap: round;
    }

.meter {
    stroke-dasharray: 10 100; /* for 10% */
    transition: stroke-dasharray var(--transition-duration) ease-in-out;
}


.gradient {
    width: 100%;
    height: 100%;
}

    .gradient--conic__default {
        background: conic-gradient(
            from calc(-45deg + var(--light-direction)),
            var(--color-pink-600) 10%,
            var(--color-yellow-100),
            var(--color-pink-600) 95%
        );
    }

    .gradient--conic__yellow_to_green {
        background: conic-gradient(
            from 84deg,
            var(--color-yellow-500) 0%,
            var(--color-green-600) 100%
        );
    }

    .gradient--conic__yellow_to_pink {
        background: conic-gradient(
            from 80deg,
            var(--color-yellow-100) 0%,
            var(--color-pink-600) 100%
        );
    }

    .gradient--conic__blue_to_red {
        background: conic-gradient(
            from 90deg,
            var(--color-blue-500) 0%,
            var(--color-pink-600) 75%,
            var(--color-blue-500) 100%
        );
    }

    .gradient--conic__ventilation {
        background: conic-gradient(
            from 80deg,
            var(--color-blue-500) 5%,
            var(--color-green-600) 20%,
            var(--color-yellow-500) 40%,
            var(--color-yellow-100) 60%,
            var(--color-pink-500) 80%,
            var(--color-blue-500) 95%
        );
    }

    .gradient--conic__sky {
        background: conic-gradient(
            from -90deg,
            var(--color-blue-500) 5%,
            var(--color-yellow-100) 15%,
            var(--color-yellow-100) 35%,
            var(--color-pink-600) 50%,
            var(--color-blue-800) 55%,
            var(--color-blue-800) 95%,
            var(--color-blue-500) 100%
        );
    }

    .gradient--linear__default {
        background: linear-gradient(
            var(--light-direction),
            var(--color-pink-600) 40%,
            var(--color-blue-800) 100%
        );
    }

    .gradient--linear__green {
        background: linear-gradient(
            var(--light-direction),
            var(--color-green-300) 40%,
            var(--color-green-600) 100%
        );
    }

    .gradient--linear__yellow_to_red {
        background: linear-gradient(
            var(--light-direction),
            var(--color-yellow-600) 40%,
            var(--color-red-300) 100%
        );
    }

    .gradient--linear__blue_to_red {
        background: linear-gradient(
            var(--light-direction),
            var(--color-blue-500) 40%,
            var(--color-red-600) 100%
        );
    }

    .gradient--linear__grey {
        background: linear-gradient(
            var(--light-direction),
            var(--color-dark-100) 40%,
            var(--color-dark-300) 100%
        );
    }

svg {
    height: 100%;
    width: 100%;
}

    .svg--symbols {
        height: 0;
        width: 0;
    }

abbr {
    text-decoration: none;
}
