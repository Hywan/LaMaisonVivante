:root {
    --color-light-000-transparent: hsla(0, 0%, 100%, 0.96);
    --color-light-000: hsl(0, 0%, 100%);
    --color-light-005: hsl(0, 0%, 99.5%);
    --color-light-010: hsla(0, 0%, 99%, 0.85);
    --color-light-100: hsl(214, 41%, 97%);
    --color-light-200: hsl(222, 25%, 92%);
    --color-light-300: hsl(217, 48%, 83%);
    --color-blue-300: hsl(213, 100%, 88%);
    --color-blue-500: hsl(213, 100%, 74%);
    --color-blue-800: hsl(213, 100%, 25%);
    --color-yellow-000: hsl(47, 100%, 92%);
    --color-yellow-100: hsl(47, 81%, 75%);
    --color-yellow-500: hsl(47, 100%, 58%);
    --color-pink-300: hsl(324, 77%, 88%);
    --color-pink-500: hsl(324, 77%, 75%);
    --color-pink-600: hsl(331, 64%, 64%);
    --color-green-300: hsl(114, 57%, 70%);
    --color-green-600: hsl(114, 57%, 48%);
    --color-dark-500: hsl(0, 0%, 26%);
    --color-dark: hsl(0, 100%, 0%);

    --space-very-small: .25rem;
    --space-small: .5rem;
    --space: 1rem;
    --space-large: 1.5rem;
    --space-very-large: 3rem;
    --space-very-very-large: 4rem;

    --light-direction: 170deg;
    --shadow-distance: 14px;
    --shadow-blur: 28px;

    --inset-shadow-distance: 5px;
    --inset-shadow-blur: 10px;

    --backdrop-blur: 40px;

    --icon-small: 1rem;
}

@font-face {
    font-family: text;
    src: url('../fonts/inter-regular.woff2') format('woff2');
    font-weight: normal;
    font-style: normal;
    font-weight: 400;
    font-display: swap;
}

@font-face {
    font-family: text;
    src: url('../fonts/inter-semi-bold.woff2') format('woff2');
    font-weight: normal;
    font-style: normal;
    font-weight: 600;
    font-display: swap;
}

* {
    margin: 0;
    padding: 0;
}

*:focus {
    /* I know, it's super super bad for accessibility, but it fixes a
       quick bug on iOS, and nobody needs it at my house, which is the
       only place where this app runs. Please don't do that. */
    outline: none;
}

html {
    color: var(--color-dark);
    font-size: 100%;
    min-height: 100%;
    background: linear-gradient(var(--light-direction), var(--color-light-000), var(--color-light-200)) no-repeat;
}

body {
    display: grid;
    grid-template: "header"
                   "main";
    grid-template-rows: auto 1fr;
    margin: 0 auto;
    padding: 0 var(--space);
    min-height: 100%;
    max-width: 50rem;

    font: 1.1em/1.4em text;
    font-weight: 400;
}

.header--container {
    position: sticky;
    z-index: 20;
    top: 0;
    isolate: isolation;
    margin-bottom: var(--space-large);
}

.header--container::before {
    content: '';
    position: absolute;
    z-index: -1;
    inset: 0 calc(-1 * var(--space-large));
    background: var(--color-light-000-transparent);
}

    @supports (backdrop-filter: blur(0)) or (-webkit-backdrop-filter: blur(0)) {
        .header--container::before {
            backdrop-filter: blur(var(--backdrop-blur));
            -webkit-backdrop-filter: blur(var(--backdrop-blur));
            background: transparent;
        }
    }

.header {
    grid-area: header;

    display: grid;
    grid-template: "header-title header-details";

    max-width: 50rem;
    font-weight: 600;
    line-height: var(--space-very-large);
}

    .header--title a {
        color: inherit;
    }

    .header--title {
        grid-area: header-title;
        font-size: 120%;
    }

        .header--title > ol {
            list-style: none;
        }

        .header--title > ol > li:not(:last-child) {
            display: none;
        }

        .header--title > ol > li:not(:first-child) > a::before {
            content: 'Â ';
            display: inline-block;
            width: 1.4rem;
            background: url('../icons/chevron_left.svg') 50% 50% no-repeat;
        }

    .header--details {
        grid-area: header-details;
        text-align: end;
        list-style: none;
    }

    .header--details > li {
        display: inline-block;
        position: relative;
    }

    .header--details[role="tablist"] > [role="tab"] {
        margin-left: var(--space);
    }

    .header--details[role="tablist"] > [role="tab"][aria-selected="true"]::before {
        content: '';
        position: absolute;
        left: calc(50% - var(--space-small) / 2);
        bottom: var(--space-very-small);
        width: var(--space-small);
        height: var(--space-small);
        border-radius: 50%;
        background: var(--color-yellow-500);
    }

[aria-hidden="true"] {
    display: none;
}

main {
    grid-area: main;
}

.things--location {
    display: block;
    margin-block-end: var(--space-large);
    padding: var(--space);
    border: 4px solid transparent;
    border-radius: var(--space);
    box-shadow: var(--shadow-distance) var(--shadow-distance) var(--shadow-blur) var(--color-light-200),
                    calc(-1 * var(--shadow-distance)) calc(-1 * var(--shadow-distance)) var(--shadow-blur) var(--color-light-000);
    background: linear-gradient(var(--color-light-000), var(--color-light-000)) padding-box,
                linear-gradient(var(--light-direction), var(--color-yellow-100), var(--color-pink-600)) border-box;
}

.things--list {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(10rem, 1fr));
    gap: var(--space);
    justify-items: center;

    margin-bottom: var(--space-very-very-large);
    padding-top: var(--space-large);
}

.thing--frame {
    --thing--frame--font-size-primary: .9rem;
    --thing--frame--font-size-secondary: .7rem;
    --thing--frame--padding-block: var(--space);
    --thing--frame--padding-inline: var(--space-large);

    display: flex;
    flex-direction: column-reverse;
    gap: var(--space-very-small);

    box-sizing: border-box;
    width: 9.5rem;
    height: 9.5rem;
    padding: var(--thing--frame--padding-block) var(--thing--frame--padding-inline);

    border-radius: var(--space-very-large);
    box-shadow: var(--shadow-distance) var(--shadow-distance) var(--shadow-blur) var(--color-light-200),
                calc(-1 * var(--shadow-distance)) calc(-1 * var(--shadow-distance)) var(--shadow-blur) var(--color-light-000);
    background: var(--color-light-000);
}

    .thing--frame > .thing--frame-name {
        display: flex;
        flex-direction: column-reverse;
        align-self: center;
    }

    .thing--frame > .thing--frame-name > .thing--frame-subname {
        font-size: 75%;
        font-weight: normal;
        line-height: 80%;
    }

    .thing--frame > .thing--frame-content {
        flex: 1;
    }

.thing--actionable {}

.thing--actions {
    --thing--action-size: 2rem;

    display: flex;
    flex-flow: row wrap;
    gap: .5rem;
    margin-top: var(--space);
}

    .thing--actions > * {
        flex: 1;
    }

.thing--expandable {}

    .thing--expandable[aria-expanded = "false"] > .thing--long {
        display: none;
    }

    .thing--expandable[aria-expanded = "true"] > .thing--summary {
        display: none;
    }

        .thing--expandable[aria-expanded = "false"] > .thing--summary > .thing--frame-content {
            display: grid;
            grid-template: "state-icon"
                           "state-text";
            grid-template-rows: 1fr auto auto;
            justify-items: center;
            align-items: center;

            cursor: pointer;
            color: inherit;
        }

        .thing--expandable[aria-expanded = "false"]:hover > .thing--summary, .thing[aria-expanded = "false"]:focus > .thing--summary {
            box-shadow: var(--shadow-distance) var(--shadow-distance) var(--shadow-blur) var(--color-light-300),
                     calc(-1 * var(--shadow-distance)) calc(-1 * var(--shadow-distance)) var(--shadow-blur) var(--color-light-100);
            background: linear-gradient(var(--light-direction), var(--color-blue-300), var(--color-pink-300)) no-repeat;

            color: var(--color-light-000);
        }

        .thing--expandable > .thing--summary > .thing--frame-content > .thing--state-icon {
            grid-area: state-icon;
        }

        .thing--expandable > .thing--summary > .thing--frame-content > .thing--state-text {
            grid-area: state-text;
        }

    .thing--expandable[aria-expanded = "true"] {
        position: fixed;
        z-index: 9;
        top: var(--space-very-large);
        right: 0;
        bottom: 0;
        left: 0;
        background: var(--color-light-000-transparent);
    }

    @supports (backdrop-filter: blur(0)) or (-webkit-backdrop-filter: blur(0)) {
        .thing--expandable[aria-expanded = "true"] {
            backdrop-filter: blur(var(--backdrop-blur));
            -webkit-backdrop-filter: blur(var(--backdrop-blur));
            background: transparent;
        }
    }

    .thing--expandable > .thing--long {
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
        margin: 0 auto;
        max-width: 50rem;
        padding: var(--space-large);
        min-height: 100%;
    }

        .thing--expandable > .thing--long > .thing--name {
            margin-block-end: var(--space-large);
        }

        .thing--expandable > .thing--long > .thing--thing {
            flex: 1;
        }

.thing--meter {}

    .thing--meter > .thing--frame-content {
        position: relative;
        text-align: center;
    }

    .thing--meter > .thing--frame-content > .thing--meter-meter {
        width: 100%;
        vertical-align: bottom;
    }

    .thing--meter > .thing--frame-content > .thing--meter-primary-value {
        --this-height: 1.5rem;

        position: absolute;
        top: calc(50% - var(--this-height) / 2 - var(--this-height) / 4);
        left: 0;
        right: 0;
        line-height: var(--this-height);
        text-align: center;
        font-size: var(--thing--frame--font-size-primary);
    }

    .thing--meter > .thing--frame-content > .thing--meter-secondary-value {
        --this-height: 1.5rem;

        position: absolute;
        top: calc(50% - var(--this-height) / 2 + var(--this-height) / 2);
        left: 0;
        right: 0;
        line-height: var(--this-height);
        text-align: center;
        font-size: var(--thing--frame--font-size-secondary);
        color: var(--color-dark-500);
    }

.thing--solar-pv {}

    .thing--solar-pv > .thing--frame-content {
        position: relative;
    }

    .thing--solar-pv > .thing--frame-content > .thing--solar-pv-meter {
        width: 100%;
        vertical-align: bottom;
    }

    .thing--solar-pv > .thing--frame-content > .thing--solar-pv-primary-value {
        --this-height: 1.5rem;

        position: absolute;
        top: calc(50% - var(--this-height) / 2 - var(--this-height) / 4);
        left: 0;
        right: 0;
        line-height: var(--this-height);
        text-align: center;
        font-size: var(--thing--frame--font-size-primary);
    }

    .thing--solar-pv > .thing--frame-content > .thing--solar-pv-sunrise,
    .thing--solar-pv > .thing--frame-content > .thing--solar-pv-sunset {
        --this-height: 1.5rem;
        --solar-pv-sunrise-sunset-width: 2rem;

        position: absolute;
        top: calc(50% - var(--this-height) / 2 + var(--this-height) / 2);
        line-height: var(--this-height);
        text-align: center;
        font-size: var(--thing--frame--font-size-secondary);
        color: var(--color-dark-500);
        width: var(--solar-pv-sunrise-sunset-width);
    }

    .thing--solar-pv > .thing--frame-content > .thing--solar-pv-sunrise {
        left: 0;
        text-align: left;
    }

    .thing--solar-pv > .thing--frame-content > .thing--solar-pv-sunset {
        right: 0;
        text-align: right;
    }

    .thing--solar-pv > .thing--frame-content > .thing--solar-pv-meter .meter {
        transform: rotate(180deg);
        transform-origin: 50% 50%;
        stroke-dasharray: 50 100;
    }

.thing--dhw {}

    .thing--dhw > .thing--frame-content {
        position: relative;
        text-align: center;
    }

    .thing--dhw > .thing--frame-content > .thing--dhw-boiler {
        height: 5.5rem;
        vertical-align: bottom;
        margin-bottom: var(--space-very-small);
    }

    .thing--dhw > .thing--frame-content > .thing--dhw-top-value,
    .thing--dhw > .thing--frame-content > .thing--dhw-bottom-value {
        --this-height: 1.5rem;

        position: absolute;
        right: -.5rem;
        line-height: var(--this-height);
        text-align: center;
        font-size: var(--thing--frame--font-size-primary);
        padding-left: .4rem;
        border-radius: .5rem;
        background: var(--color-light-000);
    }

    .thing--dhw > .thing--frame-content > .thing--dhw-top-value {
        top: 10%;
    }

    .thing--dhw > .thing--frame-content > .thing--dhw-bottom-value {
        top: 65%;
    }

.thing--ventilation {}

    .thing--ventilation > .thing--frame-content {
        position: relative;
        text-align: center;
    }

    .thing--ventilation > .thing--frame-content > .thing--ventilation-meters {
        width: 100%;
        vertical-align: bottom;
    }

    .thing--ventilation > .thing--frame-content > .thing--ventilation-after-ground-coupled-heat-exchanger,
    .thing--ventilation > .thing--frame-content > .thing--ventilation-after-heat-recovery-exchanger,
    .thing--ventilation > .thing--frame-content > .thing--ventilation-extracted {
        --this-height: 1.5rem;

        position: absolute;
        line-height: var(--this-height);
        text-align: center;
        font-size: var(--thing--frame--font-size-secondary);
    }

    .thing--ventilation > .thing--frame-content > .thing--ventilation-after-ground-coupled-heat-exchanger {
        top: .5rem;
        right: .5rem;
    }

    .thing--ventilation > .thing--frame-content > .thing--ventilation-after-heat-recovery-exchanger {
        --this-width: 2rem;

        top: calc(50% - var(--thing--frame--font-size-primary) + .1rem /* visual adjustement */);
        left: calc(50% - var(--this-width) / 2);
        width: var(--this-width);
        font-size: var(--thing--frame--font-size-primary);
    }

    .thing--ventilation > .thing--frame-content > .thing--ventilation-extracted {
        top: 1.2rem;
        right: .5rem;
    }

.thing--pulse,
.thing--blind {
    display: flex;
    align-items: center;
    border-radius: calc(var(--thing--action-size) / 2);
    height: var(--thing--action-size);
}

    .thing--pulse > .icon {
        height: calc(var(--thing--action-size) - 1rem);
    }

    .thing--blind > .icon {
        height: calc(var(--thing--action-size) - 1.4rem);
    }

iframe {
    width: 100%;
    height: 100%;
    border: 0;
    display: block;
}

#metrics-panel > iframe {
    height: calc(100vh - var(--space-very-large) * 4);
    border: 4px solid transparent;
    border-radius: var(--space);
    box-shadow: var(--shadow-distance) var(--shadow-distance) var(--shadow-blur) var(--color-light-200),
                calc(-1 * var(--shadow-distance)) calc(-1 * var(--shadow-distance)) var(--shadow-blur) var(--color-light-000);
    background: linear-gradient(var(--color-light-000), var(--color-light-000)) padding-box,
                linear-gradient(var(--light-direction), var(--color-yellow-100), var(--color-pink-600)) border-box;
}

h2 { font-size: 130% }
h3 { font-size: 110% }

.heading, .heading--subtitle {
    display: block;
    line-height: 100%;
}

    h2 > .heading--subtitle {
        font-size: 60%;
        font-weight: normal;
        padding-block-start: var(--space-small);
    }

a {
    text-decoration: none;
}

strong {
    font-weight: 600;
} 

button {
    appeareance: none;
    cursor: pointer;

    color: var(--color-green-600);
    font: inherit;
    font-weight: 600;

    border: none;
    background: var(--color-light-010);
    box-shadow: inset 1px 1px 3px #e9e9e9,
                inset -1px -1px 3px #ffffff;
}

    button:hover,
    button:focus {
        background: var(--color-light-000);
    }

.icon {
    max-width: 100%;
    max-height: 100%;
}

    .header .icon {
        padding: 0;
        height: 1.5rem;
        width: 1.5rem;
    }

.tabs {
    text-align: center;
}
    
    .tabs > [role="tablist"] {
        display: inline-block;
        list-style: none;
        text-align: center;
        margin: 0 auto var(--space-large) auto;
        padding: var(--space-very-small);

        border-radius: 14px;
        background: var(--color-light-000);
        box-shadow: inset var(--inset-shadow-distance) var(--inset-shadow-distance) var(--inset-shadow-blur) var(--color-light-200),
                    inset calc(-1 * var(--inset-shadow-distance)) calc(-1 * var(--inset-shadow-distance)) var(--inset-shadow-blur) var(--color-light-000);
    }

    .tabs > [role="tab"] {
        display: inline-block;
        padding: var(--space-very-small) var(--space);
        border-radius: 10px;
    }

    .tabs > [role="tab"][aria-selected="true"] {
        background: var(--color-light-000);
        box-shadow: var(--inset-shadow-distance) var(--inset-shadow-distance) var(--inset-shadow-blur) var(--color-light-200);
    }

[role="tab"] {
    cursor: pointer;
}

.blender {}

    .blender--subject {
        mix-blend-mode: lighten;
    }

.meter {
    stroke-dasharray: 10 100; /* for 10% */
    transition: stroke-dasharray 300ms ease-in-out;
}

.stroked {
    fill: none;
    filter: drop-shadow(0 0 2px var(--color-light-200));
    stroke: #000;
    stroke-width: 2;
    stroke-linecap: round;
}

.gradient {
    width: 100%;
    height: 100%;
}

    .gradient--conic__default {
        background: conic-gradient(
            from calc(-45deg + var(--light-direction)),
            var(--color-pink-600) 10%,
            var(--color-yellow-100),
            var(--color-pink-600) 95%
        );
    }

    .gradient--conic__yellow_to_green {
        background: conic-gradient(
            from 84deg,
            var(--color-yellow-500) 0%,
            var(--color-green-600) 100%
        );
    }

    .gradient--conic__blue_to_red {
        background: conic-gradient(
            from 90deg,
            var(--color-blue-500) 0%,
            var(--color-pink-600) 75%,
            var(--color-blue-500) 100%
        );
    }

    .gradient--conic__ventilation {
        background: conic-gradient(
            from 80deg,
            var(--color-blue-500) 5%,
            var(--color-green-600) 20%,
            var(--color-yellow-500) 40%,
            var(--color-yellow-100) 60%,
            var(--color-pink-500) 80%,
            var(--color-blue-500) 95%
        );
    }
    
    .gradient--conic__sky {
        background: conic-gradient(
            from -90deg,
            var(--color-blue-500) 5%,
            var(--color-yellow-100) 15%,
            var(--color-yellow-100) 35%,
            var(--color-pink-600) 50%,
            var(--color-blue-800) 55%,
            var(--color-blue-800) 95%,
            var(--color-blue-500) 100%
        );
    }

.svg--symbols {
    height: 0;
    width: 0;
}
